execute pathogen#infect()
syntax on
filetype plugin indent on

"colorscheme from select/bundle/colors
colorscheme molokai
"colorscheme monokai-phoenix

"tab size"
set tabstop=4
set shiftwidth=4
set expandtab

"disable swap file"
set noswapfile 

"cursor -v-h"
set cursorline
"set cursorcolumn!



"dracula theme
"color dracula

"line number
set nu

call plug#begin()
Plug 'StanAngeloff/php.vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all'  }
Plug 'junegunn/fzf.vim' 	
Plug 'prettier/vim-prettier', {'do': 'yarn install','for': ['javascript', 'typescript', 'css', 'less', 'scss', 'json','graphql', 'markdown', 'vue', 'yaml', 'html'] }
call plug#end()


"vundle start
call vundle#begin()
Plugin 'scrooloose/nerdtree'
Plugin 'jiangmiao/auto-pairs'
Plugin 'dracula/vim'
Plugin 'VundleVim/Vundle.vim'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'mattn/emmet-vim'
""Bundle 'wellle/tmux-complete.vim'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'w0rp/ale'
Plugin 'itchyny/lightline.vim'
Plugin 'flazz/vim-colorschemes'
Plugin 'Xuyuanp/nerdtree-git-plugin'
call vundle#end()
"vundle end



"nerdtree shortcut
map <C-f> :NERDTreeToggle<CR>      
let g:NERDTreeWinSize=22
"nerdtree shortcut end

""" nerdtree-plugin

let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }


" nerdtree-plugin end




"bottom bar -lighthline-start
set laststatus=2

"bottom bar -lighthline-end

"emmet start"
"enable in different mode"
let g:user_emmet_mode='n'    "only enable normal mode functions.
let g:user_emmet_mode='inv'  "enable all functions, which is equal to
let g:user_emmet_mode='a'    "enable all function in all mode.

"enable just for html/css"

""let g:user_emmet_install_global =  0
""autocmd FileType html,css,php,js,jsx EmmetInstall
"shortcut"
let g:user_emmet_leader_key='<Tab>'
let g:user_emmet_setting = {'javascript.jsx':{'extends':'jsx'}}

"emmet end"

"ale start"
" Set this variable to 1 to fix files when you save them.
let g:ale_fix_on_save = 1

"ale setting"
let g:ale_sign_error = '●' " Less aggressive than the default '>>'
""let g:ale_lint_on_enter = 0 " Less distracting when opening a new file



" Enable completion where available.
" " This setting must be set before ALE is loaded.
let g:ale_completion_enabled = 1

" Fix files with prettier, and then ESLint.
" Equivalent to the above.
""let b:ale_fixers = {'javascript': ['prettier', 'eslint']}
let b:ale_fixers = ['prettier']
"errors"
let g:ale_sign_warning = '>>'



" Set this in your vimrc file to disabling highlighting
" let g:ale_set_highlights = 0
""""""""""""""""""""""""""""""""""""""""""""

" Set this. Airline will handle the rest.
let g:airline#extensions#ale#enabled = 1


" ale end"

"js lib syntax start"

autocmd BufReadPre *.js let b:javascript_lib_use_jquery=1
autocmd BufReadPre *.js let b:javascript_lib_use_underscore=0
autocmd BufReadPre *.js let b:javascript_lib_use_backbone=0
autocmd BufReadPre *.js let b:javascript_lib_use_prelude=0
autocmd BufReadPre *.js let b:javascript_lib_use_angularjs=0
autocmd BufReadPre *.js let b:javascript_lib_use_angularui=0
autocmd BufReadPre *.js let b:javascript_lib_use_flux=1
autocmd BufReadPre *.js let b:javascript_lib_use_react=1
autocmd BufReadPre *.js let b:javascript_lib_use_requirejs=0
autocmd BufReadPre *.js let b:javascript_lib_use_sugar=0
autocmd BufReadPre *.js let b:javascript_lib_use_jasmine=0
autocmd BufReadPre *.js let b:javascript_lib_use_chai=0
autocmd BufReadPre *.js let b:javascript_lib_use_handlebars=0
autocmd BufReadPre *.js let b:javascript_lib_use_ramda=0
autocmd BufReadPre *.js let b:javascript_lib_use_vue=0
autocmd BufReadPre *.js let b:javascript_lib_use_d3=0
autocmd BufReadPre *.js let b:javascript_lib_use_tape=0


"js lib snytax end"

"jsx highlight start"
let g:jsx_ext_required = 1
let g:jsx_pragma_required = 1

"jsx highlight end"



